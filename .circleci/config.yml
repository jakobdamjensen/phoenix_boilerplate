# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/elixir:1.9
        environment:
          MIX_ENV: "test"
          DATABASE_URL: "postgres://ubuntu@localhost:5432/phoenix_boilerplate_circleci"
          SECRET_KEY_BASE: "IaQ7NX3RRg8xT57X4Jyil31MR7d5rehkrU23+n9/E+r+PClLGUwcLAPaNVGFQsYJ"
          CI: "true"
          MNESIA_DATA_PATH: "/var/tmp/mnesia"

      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: "ubuntu"
          POSTGRES_DB: "phoenix_boilerplate_circleci"

    working_directory: ~/repo

    steps:
      - checkout

      - run: sudo apt install postgresql-client

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache: # restores saved mix cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys: # list of cache keys, in decreasing specificity
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache

      - run: mix do deps.get, compile # get updated dependencies & compile them
      - save_cache: # generate and store mix cache
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache: # make another, less specific cache
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache: # you should really save one more cache (just in case)
          key: v1-mix-cache
          paths: "deps"
      - save_cache: # don't forget to save a *build* cache, too
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache: # and one more build cache for good measure
          key: v1-build-cache
          paths: "_build"

      - run:
          name: Install nodejs
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -;
            sudo apt-get update && sudo apt-get install -y nodejs;
      - run:
          name: Install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -;
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list;
            sudo apt-get update && sudo apt-get install yarn;

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "assets/yarn.lock" }}

      - run:
          name: Install, compile, and digest Frontend
          command: |
            cd assets;
            yarn install --frozen-lockfile;
            npm run deploy;
            cd ..;
            MIX_ENV=prod mix phx.digest;

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "assets/yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run: mix ecto.reset
      - run: mix test

      - store_test_results: # upload junit test results for display in Test Summary
          # Read more: https://circleci.com/docs/2.0/collect-test-data/
          path: _build/test/lib/phoenix_boilerplate
